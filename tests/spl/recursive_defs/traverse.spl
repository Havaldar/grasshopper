struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  x == y ||
  x != y &*& acc(x) &*& lseg(x.next, y)
}

procedure traverse(x: Node)
  requires lseg(x, null)
  ensures lseg(x, null)
{
  assert lseg(x, null);
  var y := x;

  while (y != null)
    invariant lseg(x, y) &*& lseg(y, null)
  {
    y := y.next;
  }
}
