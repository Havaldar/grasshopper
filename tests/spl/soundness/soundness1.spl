struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  x == y || x != y &*& acc(x) &*& lseg(x.next, y)
}

procedure soundness1(x: Node)
  requires lseg(x, null);
  ensures lseg(x, null);
{
  var curr: Node;
  curr := x;
  while (curr != null) 
    invariant lseg(x, curr) &*& lseg(curr, null);
  {
    assert !true;
    curr := curr.next;
  }
}
