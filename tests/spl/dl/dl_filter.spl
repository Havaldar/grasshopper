include "../include/dllist.spl";

procedure dl_filter(a: Node, b: Node) returns (c: Node, d: Node)
    requires dlseg(a, null, null, b);
    ensures dlseg(c, null, null, d);
{
  var prv: Node, curr: Node;
  c, d := a, b;
  prv := null;
  curr := c;
  while (curr != null) 
    invariant dlseg(c, null, curr, prv) &*& dlseg(curr, prv, null, d);
  { 
    var nondet: Bool, old_curr: Node;
    old_curr := curr;
    curr := curr.next;
    if (nondet) {
      if (prv != null) {
        prv.next := curr;
      } else {
        c := curr;
      }
      if (curr != null) {
        curr.prev := prv;
      } else {
        d := prv;
      }
      free old_curr;
    } else {
      prv := old_curr;
    }
  }
}
