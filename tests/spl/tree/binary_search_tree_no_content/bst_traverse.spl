struct Node {
  var left: Node;
  var right: Node;
  var parent: Node;
  var data: int;
}

predicate stree(x: Node, y: Node) {
    x == null
  ||
    x != null &*&
    x.parent |-> y &*&
    stree(x.left, x) &*&
    stree(x.right, x) &*&
    (x.left == null || (x.left != null && x.left.data < x.data)) &*&
    (x.right == null || (x.right != null && x.right.data > x.data)) 
}

procedure traverse(root: Node, p: Node) 
  requires stree(root, p);
  ensures  stree(root, p);
{
  if (root != null) {
    traverse(root.left, root);
    traverse(root.right, root);
  }
}

