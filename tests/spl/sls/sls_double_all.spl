include "../include/slslist.spl";

procedure sls_double_all(lst: Node) returns (res: Node)
  requires slseg(lst, null);
  ensures slseg(lst, null) &*& slseg(res, null);
{
  if (lst == null) {
    return null;
  } else {
    var curr: Node, cp: Node;
    curr := lst;
    res := new Node;
    cp := res;
    cp.data := 2 * curr.data;
    cp.next := null;
    while(curr.next != null) 
      invariant lslseg(lst, curr, curr.data);
      invariant slseg(curr, null);
      invariant lslseg(res, cp, 2 * curr.data);
      invariant cp.next |-> null;
      invariant cp.data == 2 * curr.data;
      invariant curr != null;
    {
      var old_cp: Node;
      old_cp := cp;
      cp := new Node;
      old_cp.next := cp;
      curr := curr.next;
      cp.data := 2 * curr.data;
      cp.next := null;
    }
    return res;
  }
}
