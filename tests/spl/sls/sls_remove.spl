include "../include/slslist.spl";

procedure remove(lst: Node, value: Int) returns (res: Node)
  requires slseg(lst, null);
  ensures slseg(res, null);
{
  var curr: Node, prv: Node;
  prv := null;
  curr := lst;
  while (curr != null && curr.data < value) 
    invariant prv == null &*& curr == lst &*& slseg(curr, null) ||
                lslseg(lst, prv, prv.data) &*& prv.next |-> curr &*& slseg(curr, null) &*&
                  (curr == null || prv.data <= curr.data);
  {
    prv := curr;
    curr := curr.next;
  }
  if (curr != null && curr.data == value) {
    if (prv == null) {
      lst := curr.next;
    } else {
      prv.next := curr.next;
    }
    free curr;
  }
  return lst;
}
