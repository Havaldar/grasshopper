// Structure and predicate declarations for sinly-linked lists

struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  x == y || x != y &*& acc(x) &*& lseg(x.next, y)
}

predicate lseg_set(x: Node, y: Node, X: Set<Node>) {
  x == y && X == Set<Node>() ||
  x != y &*& x in X &*& acc(x) &*& lseg_set(x.next, y, X -- Set(x))
}
