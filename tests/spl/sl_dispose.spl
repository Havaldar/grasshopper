struct Node {
  var next: Node;
}

predicate lseg(x: Node, y: Node) {
  x == y || x != y &*& x &*& lseg(x.next, y)
}

procedure dispose(lst: Node)
  requires lseg(lst, null);
  ensures emp;
{
  while (lst != null) 
    invariant lseg(lst, null);
  {
    var curr: Node;
    curr := lst;
    lst := lst.next; 
    free(curr);
  }
}
