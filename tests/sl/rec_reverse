method rev1(curr, rev)
    requires lseg(next, rev, null) * lseg(next, curr, null);
    ensures lseg(next, returned, null);
{
    if (curr == null) {
        return rev;
    } else {
        tmp := curr.next;
        curr.next := rev;
        r := rev1(curr, tmp);
        return r;
    }
}

method rec_reverse(lst)
    requires lseg(next, lst, null);
    ensures lseg(next, returned, null);
{
    r := rev1(lst, null);
    return r;
}
