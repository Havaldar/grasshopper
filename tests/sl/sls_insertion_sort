method insertion_sort(lst)
    requires lseg(next, lst, null);
    ensures slseg(next, data, lst, null);
{
    prv := null;
    srt := lst;
    while (srt != null)
        invariant prv == null * srt == lst * lseg(next, lst, null) || lslseg(next, data, lst, srt, prv.data) * ulseg(next, data, srt, null, prv.data);
    {
        curr := srt.next;
        min := srt;
        while (curr != null)
            invariant prv == null * lseg(next, curr, null) || ulseg(next, data, curr, null, prv.data) * prv.data <= min.data;
            invariant ulseg(next, data, srt, min, min.data);
            invariant ulseg(next, data, min, curr, min.data);
            invariant min != null;
        {
            if (curr.data < min.data) {
                min := curr;
            }
            curr := curr.next;
        }
        tmp := min.data;
        min.data := srt.data;
        srt.data := tmp;
        prv := srt;
        srt := srt.next;
    }
}
