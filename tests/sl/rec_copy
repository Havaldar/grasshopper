method copy1(curr, cp)
    requires lseg(next, cp, null) * lseg(next, curr, null);
    ensures  lseg(next, returned, null) * lseg(next, curr, null);
{
    if (curr == null) {
        return cp;
    } else {
        old_cp := cp;
        new cp;
        cp.next := old_cp;
        n := curr.next;
        res := copy1(n, cp);
        return res;
    }
}

method rec_copy(lst)
    requires lseg(next, lst, null);
    ensures lseg(next, lst, null) * lseg(next, returned, null);
{
    cp := copy1(lst, null);
    return cp;
}
