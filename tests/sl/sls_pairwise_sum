method pairwise_sum(x, y)
    requires slseg(data, next, x, null) * slseg(data, next, y, null);
    ensures slseg(data, next, x, null) * slseg(data, next, y, null) * slseg(data, next, returned, null);
{
    if (x == null || y == null) {
      return null;
    }
    curr_x := x;
    curr_y := y;
    new z;
    last_z := z;
    z.data := curr_x.data + curr_y.data;
    z.next := null;
    while (curr_x.next != null && curr_y.next != null) 
        invariant curr_x != null * lslseg(data, next, x, curr_x, curr_x.data) * slseg(data, next, curr_x, null);
        invariant curr_y != null * lslseg(data, next, y, curr_y, curr_y.data) * slseg(data, next, curr_y, null);
        invariant lslseg(data, next, z, last_z, last_z.data) * last_z |-> null;
        invariant last_z.data <= curr_x.data + curr_y.data;
    {
        curr_x := curr_x.next;
        curr_y := curr_y.next;
        tmp := last_z;
        new last_z;
        last_z.next := null;
        last_z.data := curr_x.data + curr_y.data;        
        if (z == null) {
            z := last_z;
        } else {
            tmp.next := last_z;
        }
    }
    return z;
}
