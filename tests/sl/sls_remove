method remove(lst, value)
    requires slseg(next, data, lst, null);
    ensures slseg(next, data, returned, null);
{
    prv := null;
    curr := lst;
    while (curr != null && curr.data < value) 
        invariant prv == null * curr == lst * slseg(next, data, curr, null)
               || lslseg(next, data, lst, prv, prv.data) * prv |-> curr * slseg(next, data, curr, null) * (curr == null || prv.data <= curr.data);
    {
        prv := curr;
        curr := curr.next;
    }
    if (curr != null && curr.data == value) {
        if (prv == null) {
          lst := curr.next;
        } else {
          prv.next := curr.next;
        }
        free curr;
    }
    return lst;
}
