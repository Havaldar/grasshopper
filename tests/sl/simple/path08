//not entailed
//The idea is to add a new node in front of a list segment. I though this
//example should be valid but this is not the case. The reason is that the end
//of the lseg predicate points to an element that is not part of the heap/not
//allocated. Therefore, allocating a new elements can returns an element that
//is pointed by the end of the list segment. This means that a circular list
//c->a->b=c is created and lseg(c,b) does not hold.

path08(a)
requires lseg(a, b)
ensures lseg(c, b)
{
  new c;
  c.next := a;
}
