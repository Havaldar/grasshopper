assume f null = null;
assume Btwn_f d c a;
assume Btwn_f c b a;
assume b ~= d;
assume a ~= b;
assume a ~= d;
assume c ~= d;
assume c ~= a;
assume c ~= b;
assume Btwn_f e b b;
assume Btwn_f g c c;
assume ~(Btwn_f e g g);
assume ~(Btwn_f g e e);
assume ~(Btwn_f b c c);
assume ~(Btwn_f e c c);
assume Btwn_f d null null;

cut:

assume f null = null;
assume Btwn_f d c1 a;
assume Btwn_f c1 b1 a;
assume b1 ~= d;
assume a ~= b1;
assume c1 ~= d;
assume c1 ~= a;
assume c1 ~= b1;
assume Btwn_f e c1 c1;
assume Btwn_f g b1 b1;
assume ~(Btwn_f b1 c1 c1);
assume ~(Btwn_f g c1 c1);