var ghost Alloc: Set<Loc>;
var ghost InnerNode: Set<Loc>;
var ghost OuterNode: Set<Loc>;
var down: Map<Loc, Loc>;
var head: Map<Loc, Loc>;
var inext: Map<Loc, Loc>;
var onext: Map<Loc, Loc>;

/* null_in_OuterNode */
axiom null in OuterNode;

/* InnerNode_disjoint_from_OuterNode */
axiom InnerNode ** OuterNode == {null};

/* type_of_onext */
axiom (forall ?x: Loc :: ?x.onext in OuterNode || (?x !in OuterNode));

/* type_of_onext */
axiom (forall ?x: Loc :: ?x in OuterNode || ?x.onext == null);

/* type_of_onext */
axiom
  (forall ?x: Loc, ?y: Loc :: ?y in OuterNode ||
     !(Btwn(onext, ?x, ?y, ?y)) || (?x !in OuterNode));

/* type_of_onext */
axiom
  (forall ?x: Loc, ?y: Loc :: ?x in OuterNode ||
     !(Btwn(onext, ?x, ?y, ?y)) || ?x == ?y || ?y == null);

/* type_of_down */
axiom (forall ?x: Loc :: ?x.down in InnerNode || (?x !in OuterNode));

/* type_of_down */
axiom (forall ?x: Loc :: ?x in OuterNode || ?x.down == null);

/* null_in_InnerNode */
axiom null in InnerNode;

/* type_of_inext */
axiom (forall ?x: Loc :: ?x.inext in InnerNode || (?x !in InnerNode));

/* type_of_inext */
axiom (forall ?x: Loc :: ?x in InnerNode || ?x.inext == null);

/* type_of_inext */
axiom
  (forall ?x: Loc, ?y: Loc :: ?y in InnerNode ||
     !(Btwn(inext, ?x, ?y, ?y)) || (?x !in InnerNode));

/* type_of_inext */
axiom
  (forall ?x: Loc, ?y: Loc :: ?x in InnerNode ||
     !(Btwn(inext, ?x, ?y, ?y)) || ?x == ?y || ?y == null);

/* type_of_head */
axiom (forall ?x: Loc :: ?x.head in OuterNode || (?x !in InnerNode));

/* type_of_head */
axiom (forall ?x: Loc :: ?x in InnerNode || ?x.head == null);

predicate lseg(ghost InnerNode: Set<Loc>, inext: Map<Loc, Loc>, x_1: Loc, 
               y_1: Loc, FP_1: Set<Loc>)
{
  (Btwn(inext, x_1, y_1, y_1)
  /* File "tests/spl/nested_sl/nested_def.spl", line 18, columns 2-20 */) &&
  (FP_1 == lseg_footprint(InnerNode, inext, x_1, y_1)
  /* File "tests/spl/nested_sl/nested_def.spl", line 19, columns 2-28 */)
}


function lseg_footprint(ghost InnerNode: Set<Loc>, inext: Map<Loc, Loc>, 
                        x_2: Loc, y_2: Loc)
  returns (FP_2: Set<Loc>)
{
  (forall z: Loc ::
     (Btwn(inext, x_2, z, y_2)
     /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 31-51 */) &&
       (z in FP_2
       /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 19-26 */) &&
       (z in InnerNode
       /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 65-79 */) &&
       (z != y_2
       /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 55-61 */) ||
     ((z == y_2
      /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 55-61 */) ||
        !((Btwn(inext, x_2, z, y_2)
          /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 31-51 */)) ||
        (z !in InnerNode
        /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 65-79 */)) &&
       (z !in FP_2
       /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 19-26 */)
  /* File "tests/spl/nested_sl/nested_def.spl", line 14, columns 2-80 */)
}


predicate nlseg(ghost InnerNode: Set<Loc>, ghost OuterNode: Set<Loc>, 
                down: Map<Loc, Loc>, head: Map<Loc, Loc>, 
                inext: Map<Loc, Loc>, onext: Map<Loc, Loc>, x_3: Loc, 
                y_3: Loc, FP_3: Set<Loc>)
{
  (Btwn(onext, x_3, y_3, y_3)
  /* File "tests/spl/nested_sl/nested_def.spl", line 41, columns 2-20 */) &&
    (forall u_1: Loc, v: Loc ::
       (v.head == u_1
       /* File "tests/spl/nested_sl/nested_def.spl", line 44, columns 33-44 */) ||
       !((Btwn(inext, u_1.down, v, v)
         /* File "tests/spl/nested_sl/nested_def.spl", line 44, columns 5-28 */)) ||
       (u_1 !in OuterNode) ||
       (u_1 !in nlseg_outer_footprint(onext, x_3, y_3)
       /* File "tests/spl/nested_sl/nested_def.spl", line 43, columns 5-37 */) ||
       (v !in InnerNode) ||
       (v !in
       nlseg_inner_footprint(InnerNode, down, head, inext, onext, x_3, y_3)
       /* File "tests/spl/nested_sl/nested_def.spl", line 43, columns 41-73 */)
    /* File "tests/spl/nested_sl/nested_def.spl", line 42, column 3 to line 44, column 44 */) &&
    (forall u: Loc ::
       (Btwn(inext, u.down, null, null)
       /* File "tests/spl/nested_sl/nested_def.spl", line 45, columns 63-89 */) ||
       (u !in OuterNode) ||
       (u !in nlseg_outer_footprint(onext, x_3, y_3)
       /* File "tests/spl/nested_sl/nested_def.spl", line 45, columns 26-58 */)
    /* File "tests/spl/nested_sl/nested_def.spl", line 45, columns 3-89 */) &&
  (FP_3 == nlseg_outer_footprint(onext, x_3, y_3) ++ nlseg_inner_footprint(
             InnerNode, down, head, inext, onext, x_3, y_3)
  /* File "tests/spl/nested_sl/nested_def.spl", line 46, columns 2-66 */)
}


function nlseg_inner_footprint(ghost InnerNode: Set<Loc>, 
                               down: Map<Loc, Loc>, head: Map<Loc, Loc>, 
                               inext: Map<Loc, Loc>, onext: Map<Loc, Loc>, 
                               x_4: Loc, y_4: Loc)
  returns (FP_4: Set<Loc>)
{
  ((forall z_2: Loc, zh_1: Loc ::
      (z_2 in InnerNode
      /* File "tests/spl/nested_sl/nested_def.spl", line 32, columns 4-18 */) &&
        (zh_1 in nlseg_outer_footprint(onext, x_4, y_4)
        /* File "tests/spl/nested_sl/nested_def.spl", line 33, columns 4-37 */) &&
        (Btwn(inext, zh_1.down, z_2, null)
        /* File "tests/spl/nested_sl/nested_def.spl", line 33, columns 41-70 */) ||
      (zh_1 != z_2.head
      /* File "tests/spl/nested_sl/nested_def.spl", line 31, columns 40-52 */) ||
      (z_2 !in FP_4
      /* File "tests/spl/nested_sl/nested_def.spl", line 31, columns 29-36 */))
  /* File "tests/spl/nested_sl/nested_def.spl", line 31, column 3 to line 35, column 45 */) &&
  (forall zh: Loc, z_1: Loc ::
     (z_1 in FP_4
     /* File "tests/spl/nested_sl/nested_def.spl", line 37, columns 75-82 */) ||
     !((Btwn(inext, zh.down, z_1, null)
       /* File "tests/spl/nested_sl/nested_def.spl", line 37, columns 41-70 */)) ||
     (zh !in nlseg_outer_footprint(onext, x_4, y_4)
     /* File "tests/spl/nested_sl/nested_def.spl", line 37, columns 4-37 */)
  /* File "tests/spl/nested_sl/nested_def.spl", line 36, column 3 to line 37, column 82 */)
}


function nlseg_outer_footprint(onext: Map<Loc, Loc>, x_5: Loc, y_5: Loc)
  returns (FP_5: Set<Loc>)
{
  (forall z_3: Loc ::
     (Btwn(onext, x_5, z_3, y_5)
     /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 31-51 */) &&
       (z_3 in FP_5
       /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 19-26 */) &&
       (z_3 != y_5
       /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 55-61 */) ||
     ((z_3 == y_5
      /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 55-61 */) ||
        !((Btwn(onext, x_5, z_3, y_5)
          /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 31-51 */))) &&
       (z_3 !in FP_5
       /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 19-26 */)
  /* File "tests/spl/nested_sl/nested_def.spl", line 25, columns 2-62 */)
}


procedure traverse(x: Loc, y: Loc, ghost FP_Caller: Set<Loc>, 
                   implicit ghost FP: Set<Loc>)
  returns (ghost FP_Caller_final: Set<Loc>)
  /* precondition of traverse */
  pure requires
    (exists ?X_2: Set<Loc> :: FP <= FP_Caller &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_2)
       /* File "tests/spl/nested_sl/traverse.spl", line 4, columns 11-22 */) &&
         (?X_2 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 4, columns 11-22 */))
  /* initial footprint of traverse */
  free pure requires FP_Caller <= Alloc && (null !in Alloc)
  /* type_of_x */
  free pure requires x in OuterNode
  /* type_of_y */
  free pure requires y in OuterNode
  /* postcondition of traverse */
  pure ensures
    (exists ?X_3: Set<Loc> ::
       (?X_3 == Alloc ** FP ++ (Alloc -- old(Alloc))
       /* File "tests/spl/nested_sl/traverse.spl", line 5, columns 10-21 */) &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_3)
       /* File "tests/spl/nested_sl/traverse.spl", line 5, columns 10-21 */))
  /* framecondition of traverse */
  free pure ensures
    FP_Caller_final == (FP_Caller -- FP) ++ Alloc ** FP ++ (Alloc -- 
                                                            old(Alloc))
  /* framecondition of traverse */
  free pure ensures Alloc == (old(Alloc) -- FP_Caller) ++ FP_Caller_final &&
    (null !in Alloc)
  /* framecondition of traverse */
  free pure ensures Frame(FP, old(Alloc), old(onext), onext)
  /* framecondition of traverse */
  free pure ensures Frame(FP, old(Alloc), old(inext), inext)
  /* framecondition of traverse */
  free pure ensures Frame(FP, old(Alloc), old(head), head)
  /* framecondition of traverse */
  free pure ensures Frame(FP, old(Alloc), old(down), down)
{
  var y_8: Loc;
  var x_8: Loc;
  var oc_4: Loc;
  var oc_3: Loc;
  var oc: Loc;
  var ic_3: Loc;
  var ic: Loc;
  var ghost FP_Caller_final_1: Set<Loc>;
  var ghost FP_Caller_1: Set<Loc>;
  var ghost FP_7: Set<Loc>;
  var ghost FP_6: Set<Loc>;
  /* precondition of traverse */
  pure assume
    (exists ?X_2: Set<Loc> :: FP <= FP_Caller &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_2)
       /* File "tests/spl/nested_sl/traverse.spl", line 4, columns 11-22 */) &&
         (?X_2 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 4, columns 11-22 */));
  /* initial footprint of traverse */
  pure assume FP_Caller <= Alloc && (null !in Alloc);
  /* type_of_x */
  pure assume x in OuterNode;
  /* type_of_y */
  pure assume y in OuterNode;
  /* assign */
  pure assume FP_Caller_1 == FP_Caller -- FP;
  /* assign */
  pure assume oc_3 == x;
  /* type_of_oc */
  pure assume oc_3 in OuterNode;
  {
    /* invariant */
    pure assert
      (exists FP_6: Set<Loc> :: (true || (FP -- FP_6 == {})) &&
         (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
            FP_6 <= FP &&
            (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y,
                   ?X_12)
            /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
              (?X_13 <= ?X_12
              /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
              (?X_14 == FP_6
              /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
              ?X_14 == ?X_12 && ?X_13 == {oc_3} ||
              (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y,
                     ?X_13)
              /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
                ({} <= ?X_13
                /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                (oc_3 == y
                /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
                (?X_12 == FP_6
                /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                ?X_12 == ?X_13));
    /* invariant */
    pure assume
      (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
         FP_6 <= FP &&
         (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_12)
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
           (?X_13 <= ?X_12
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (?X_14 == FP_6
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           ?X_14 == ?X_12 && ?X_13 == {oc_3} ||
           (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_13)
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
             ({} <= ?X_13
             /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
             (oc_3 == y
             /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
             (?X_12 == FP_6
             /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
             ?X_12 == ?X_13);
    /* invariant */
    pure assume true || FP -- FP_6 == {};
    /* havoc */
    pure assume y_8 == y_8 && x_8 == x_8 && oc_4 == oc_4 && ic_3 == ic_3 &&
      FP_7 == FP_7;
    /* invariant */
    pure assume
      (exists ?X_17: Set<Loc>, ?X_18: Set<Loc>, ?X_19: Set<Loc>,
              ?X_20: Set<Loc> ::
         ?X_17 == {oc_4} && ?X_19 == ?X_18 &&
           (?X_19 == Alloc ** FP_6 ++ (Alloc -- Alloc)
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (?X_17 <= ?X_18
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_8, y_8,
                  ?X_18)
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) ||
         ?X_20 == ?X_18 &&
           (?X_20 == Alloc ** FP_6 ++ (Alloc -- Alloc)
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (oc_4 == y_8
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
           ({} <= ?X_18
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_8, y_8,
                  ?X_18)
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */));
    /* framecondition of traverse_loop */
    pure assume FP_7 == (FP -- FP_6) ++ Alloc ** FP_6 ++ (Alloc -- Alloc);
    /* framecondition of traverse_loop */
    pure assume Alloc == (Alloc -- FP) ++ FP_7 && (null !in Alloc);
    /* framecondition of traverse_loop */
    pure assume Frame(FP_6, Alloc, onext, onext);
    /* framecondition of traverse_loop */
    pure assume Frame(FP_6, Alloc, inext, inext);
    /* framecondition of traverse_loop */
    pure assume Frame(FP_6, Alloc, head, head);
    /* framecondition of traverse_loop */
    pure assume Frame(FP_6, Alloc, down, down);
    /* loop exit condition of traverse_loop */
    pure assume
      (oc_4 == y_8
      /* File "tests/spl/nested_sl/traverse.spl", line 8, columns 9-16 */);
    /* type_of_y */
    pure assume y_8 in OuterNode;
    /* type_of_x */
    pure assume x_8 in OuterNode;
    /* type_of_oc */
    pure assume oc_4 in OuterNode;
    /* type_of_ic */
    pure assume ic_3 in InnerNode;
    /* framecondition of traverse_loop */
    pure assume x_8 == x;
    /* framecondition of traverse_loop */
    pure assume y_8 == y;
  }
  /* assign */
  pure assume FP_Caller_final_1 == FP_Caller_1 ++ FP_7;
  /* postcondition of traverse */
  pure assert
    (exists ?X_3: Set<Loc> ::
       (?X_3 == Alloc ** FP ++ (Alloc -- Alloc)
       /* File "tests/spl/nested_sl/traverse.spl", line 5, columns 10-21 */) &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_3)
       /* File "tests/spl/nested_sl/traverse.spl", line 5, columns 10-21 */));
}

procedure traverse_loop(ghost first_iter: Bool, y_6: Loc, x_6: Loc, 
                        oc_1: Loc, ic_1: Loc, ghost FP_Caller: Set<Loc>, 
                        implicit ghost FP: Set<Loc>)
  returns (y: Loc, x: Loc, oc: Loc, ic: Loc, ghost FP_Caller_final: Set<Loc>)
  /* invariant */
  pure requires
    (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
       FP <= FP_Caller &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_6, y_6, ?X_12)
       /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
         (?X_13 <= ?X_12
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (?X_14 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         ?X_14 == ?X_12 && ?X_13 == {oc_1} ||
         (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_6, y_6,
                ?X_13)
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
           ({} <= ?X_13
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (oc_1 == y_6
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
           (?X_12 == FP
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           ?X_12 == ?X_13)
  /* initial footprint of traverse_loop */
  free pure requires FP_Caller <= Alloc && (null !in Alloc)
  /* invariant */
  pure requires first_iter || (FP_Caller -- FP == {})
  /* type_of_y */
  free pure requires y_6 in OuterNode
  /* type_of_x */
  free pure requires x_6 in OuterNode
  /* type_of_oc */
  free pure requires oc_1 in OuterNode
  /* type_of_ic */
  free pure requires ic_1 in InnerNode
  /* invariant */
  free pure ensures
    (exists ?X_17: Set<Loc>, ?X_18: Set<Loc>, ?X_19: Set<Loc>,
            ?X_20: Set<Loc> ::
       ?X_17 == {oc} && ?X_19 == ?X_18 &&
         (?X_19 == Alloc ** FP ++ (Alloc -- old(Alloc))
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (?X_17 <= ?X_18
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_18)
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) ||
       ?X_20 == ?X_18 &&
         (?X_20 == Alloc ** FP ++ (Alloc -- old(Alloc))
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (oc == y
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
         ({} <= ?X_18
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (nlseg(InnerNode, OuterNode, down, head, inext, onext, x, y, ?X_18)
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */))
  /* framecondition of traverse_loop */
  free pure ensures
    FP_Caller_final == (FP_Caller -- FP) ++ Alloc ** FP ++ (Alloc -- 
                                                            old(Alloc))
  /* framecondition of traverse_loop */
  free pure ensures Alloc == (old(Alloc) -- FP_Caller) ++ FP_Caller_final &&
    (null !in Alloc)
  /* framecondition of traverse_loop */
  free pure ensures Frame(FP, old(Alloc), old(onext), onext)
  /* framecondition of traverse_loop */
  free pure ensures Frame(FP, old(Alloc), old(inext), inext)
  /* framecondition of traverse_loop */
  free pure ensures Frame(FP, old(Alloc), old(head), head)
  /* framecondition of traverse_loop */
  free pure ensures Frame(FP, old(Alloc), old(down), down)
  /* loop exit condition of traverse_loop */
  free pure ensures
    (oc == y
    /* File "tests/spl/nested_sl/traverse.spl", line 8, columns 9-16 */)
  /* type_of_y */
  free pure ensures y in OuterNode
  /* type_of_x */
  free pure ensures x in OuterNode
  /* type_of_oc */
  free pure ensures oc in OuterNode
  /* type_of_ic */
  free pure ensures ic in InnerNode
  /* framecondition of traverse_loop */
  free pure ensures x == x_6
  /* framecondition of traverse_loop */
  free pure ensures y == y_6
{
  var y_11: Loc;
  var y_10: Loc;
  var y_9: Loc;
  var x_11: Loc;
  var x_10: Loc;
  var x_9: Loc;
  var oc_8: Loc;
  var oc_7: Loc;
  var oc_6: Loc;
  var oc_5: Loc;
  var ic_7: Loc;
  var ic_6: Loc;
  var ic_5: Loc;
  var ic_4: Loc;
  var ghost FP_Caller_final_2: Set<Loc>;
  var ghost FP_Caller_2: Set<Loc>;
  var ghost FP_11: Set<Loc>;
  var ghost FP_10: Set<Loc>;
  var ghost FP_9: Set<Loc>;
  var ghost FP_8: Set<Loc>;
  /* invariant */
  pure assume
    (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
       FP <= FP_Caller &&
       (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_6, y_6, ?X_12)
       /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
         (?X_13 <= ?X_12
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         (?X_14 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
         ?X_14 == ?X_12 && ?X_13 == {oc_1} ||
         (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_6, y_6,
                ?X_13)
         /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
           ({} <= ?X_13
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           (oc_1 == y_6
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
           (?X_12 == FP
           /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
           ?X_12 == ?X_13);
  /* initial footprint of traverse_loop */
  pure assume FP_Caller <= Alloc && (null !in Alloc);
  /* invariant */
  pure assume first_iter || FP_Caller -- FP == {};
  /* type_of_y */
  pure assume y_6 in OuterNode;
  /* type_of_x */
  pure assume x_6 in OuterNode;
  /* type_of_oc */
  pure assume oc_1 in OuterNode;
  /* type_of_ic */
  pure assume ic_1 in InnerNode;
  /* assign */
  pure assume FP_Caller_2 == FP_Caller -- FP;
  /* assign */
  pure assume y_9 == y_6 && x_9 == x_6 && oc_5 == oc_1 && ic_4 == ic_1;
  choose
  {
    {
      /* if_then */
      pure assume
        ((oc_5 != y_9
         /* File "tests/spl/nested_sl/traverse.spl", line 8, columns 9-16 */));
      /* check heap access */
      pure assert oc_5 in FP;
      /* assign */
      pure assume ic_5 == oc_5.down;
      /* type_of_ic */
      pure assume ic_5 in InnerNode;
      {
        /* invariant */
        pure assert
          (exists FP_8: Set<Loc> :: (true || (FP -- FP_8 == {})) &&
             (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
                     ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
                FP_8 <= FP &&
                (lseg(InnerNode, inext, oc_5.down, null, ?X_36)
                /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                  (?X_37 <= ?X_36
                  /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                  ({} == ?X_38 ** ?X_35
                  /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                  (?X_39 == FP_8
                  /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                  ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 &&
                  ?X_37 == {ic_5} && ?X_38 == {oc_5} ||
                  (lseg(InnerNode, inext, oc_5.down, null, ?X_37)
                  /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                    ({} <= ?X_37
                    /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                    (ic_5 == null
                    /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
                    ({} == ?X_38 ** ?X_36
                    /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                    (?X_35 == FP_8
                    /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                    ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 &&
                    ?X_38 == {oc_5}));
        /* invariant */
        pure assume
          (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
                  ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
             FP_8 <= FP &&
             (lseg(InnerNode, inext, oc_5.down, null, ?X_36)
             /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
               (?X_37 <= ?X_36
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               ({} == ?X_38 ** ?X_35
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (?X_39 == FP_8
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 &&
               ?X_37 == {ic_5} && ?X_38 == {oc_5} ||
               (lseg(InnerNode, inext, oc_5.down, null, ?X_37)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                 ({} <= ?X_37
                 /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                 (ic_5 == null
                 /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
                 ({} == ?X_38 ** ?X_36
                 /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                 (?X_35 == FP_8
                 /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                 ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 && ?X_38 == {oc_5});
        /* invariant */
        pure assume true || FP -- FP_8 == {};
        /* havoc */
        pure assume y_10 == y_10 && x_10 == x_10 && oc_6 == oc_6 &&
          ic_6 == ic_6 && FP_9 == FP_9;
        /* invariant */
        pure assume
          (exists ?X_44: Set<Loc>, ?X_45: Set<Loc>, ?X_46: Set<Loc>,
                  ?X_47: Set<Loc>, ?X_48: Set<Loc>, ?X_49: Set<Loc>,
                  ?X_50: Set<Loc> ::
             ?X_44 == {oc_6} && ?X_45 == {ic_6} && ?X_47 == ?X_46 &&
               ?X_50 == ?X_44 ++ ?X_47 &&
               (?X_50 == Alloc ** FP_8 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ({} == ?X_44 ** ?X_47
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (?X_45 <= ?X_46
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               (lseg(InnerNode, inext, oc_6.down, null, ?X_46)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) ||
             ?X_44 == {oc_6} && ?X_48 == ?X_46 && ?X_49 == ?X_44 ++ ?X_48 &&
               (?X_49 == Alloc ** FP_8 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ({} == ?X_44 ** ?X_48
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (ic_6 == null
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
               ({} <= ?X_46
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               (lseg(InnerNode, inext, oc_6.down, null, ?X_46)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */));
        /* framecondition of traverse_loop_1 */
        pure assume FP_9 == (FP -- FP_8) ++ Alloc ** FP_8 ++ (Alloc -- Alloc);
        /* framecondition of traverse_loop_1 */
        pure assume Alloc == (Alloc -- FP) ++ FP_9 && (null !in Alloc);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_8, Alloc, onext, onext);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_8, Alloc, inext, inext);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_8, Alloc, head, head);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_8, Alloc, down, down);
        /* loop exit condition of traverse_loop_1 */
        pure assume
          (ic_6 == null
          /* File "tests/spl/nested_sl/traverse.spl", line 12, columns 11-21 */);
        /* type_of_y */
        pure assume y_10 in OuterNode;
        /* type_of_x */
        pure assume x_10 in OuterNode;
        /* type_of_oc */
        pure assume oc_6 in OuterNode;
        /* type_of_ic */
        pure assume ic_6 in InnerNode;
        /* framecondition of traverse_loop_1 */
        pure assume oc_6 == oc_5;
        /* framecondition of traverse_loop_1 */
        pure assume x_10 == x_9;
        /* framecondition of traverse_loop_1 */
        pure assume y_10 == y_9;
      }
      /* check heap access */
      pure assert oc_6 in FP_9;
      /* assign */
      pure assume oc_7 == oc_6.onext;
      /* type_of_oc */
      pure assume oc_7 in OuterNode;
      {
        /* invariant */
        pure assert
          (exists FP_10: Set<Loc> :: (false || (FP_9 -- FP_10 == {})) &&
             (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
                FP_10 <= FP_9 &&
                (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_10,
                       y_10, ?X_12)
                /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
                  (?X_13 <= ?X_12
                  /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                  (?X_14 == FP_10
                  /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                  ?X_14 == ?X_12 && ?X_13 == {oc_7} ||
                  (nlseg(InnerNode, OuterNode, down, head, inext, onext,
                         x_10, y_10, ?X_13)
                  /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
                    ({} <= ?X_13
                    /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                    (oc_7 == y_10
                    /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
                    (?X_12 == FP_10
                    /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                    ?X_12 == ?X_13));
        /* invariant */
        pure assume
          (exists ?X_14: Set<Loc>, ?X_12: Set<Loc>, ?X_13: Set<Loc> ::
             FP_10 <= FP_9 &&
             (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_10,
                    y_10, ?X_12)
             /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
               (?X_13 <= ?X_12
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               (?X_14 == FP_10
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               ?X_14 == ?X_12 && ?X_13 == {oc_7} ||
               (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_10,
                      y_10, ?X_13)
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) &&
                 ({} <= ?X_13
                 /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                 (oc_7 == y_10
                 /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
                 (?X_12 == FP_10
                 /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
                 ?X_12 == ?X_13);
        /* invariant */
        pure assume false || FP_9 -- FP_10 == {};
        /* havoc */
        pure assume y_11 == y_11 && x_11 == x_11 && oc_8 == oc_8 &&
          ic_7 == ic_7 && FP_11 == FP_11;
        /* invariant */
        pure assume
          (exists ?X_17: Set<Loc>, ?X_18: Set<Loc>, ?X_19: Set<Loc>,
                  ?X_20: Set<Loc> ::
             ?X_17 == {oc_8} && ?X_19 == ?X_18 &&
               (?X_19 == Alloc ** FP_10 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               (?X_17 <= ?X_18
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_11,
                      y_11, ?X_18)
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */) ||
             ?X_20 == ?X_18 &&
               (?X_20 == Alloc ** FP_10 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               (oc_8 == y_11
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 15-22 */) &&
               ({} <= ?X_18
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 14-50 */) &&
               (nlseg(InnerNode, OuterNode, down, head, inext, onext, x_11,
                      y_11, ?X_18)
               /* File "tests/spl/nested_sl/traverse.spl", line 9, columns 39-50 */));
        /* framecondition of traverse_loop */
        pure assume
          FP_11 == (FP_9 -- FP_10) ++ Alloc ** FP_10 ++ (Alloc -- Alloc);
        /* framecondition of traverse_loop */
        pure assume Alloc == (Alloc -- FP_9) ++ FP_11 && (null !in Alloc);
        /* framecondition of traverse_loop */
        pure assume Frame(FP_10, Alloc, onext, onext);
        /* framecondition of traverse_loop */
        pure assume Frame(FP_10, Alloc, inext, inext);
        /* framecondition of traverse_loop */
        pure assume Frame(FP_10, Alloc, head, head);
        /* framecondition of traverse_loop */
        pure assume Frame(FP_10, Alloc, down, down);
        /* loop exit condition of traverse_loop */
        pure assume
          (oc_8 == y_11
          /* File "tests/spl/nested_sl/traverse.spl", line 8, columns 9-16 */);
        /* type_of_y */
        pure assume y_11 in OuterNode;
        /* type_of_x */
        pure assume x_11 in OuterNode;
        /* type_of_oc */
        pure assume oc_8 in OuterNode;
        /* type_of_ic */
        pure assume ic_7 in InnerNode;
        /* framecondition of traverse_loop */
        pure assume x_11 == x_10;
        /* framecondition of traverse_loop */
        pure assume y_11 == y_10;
      }
    }
    /* join */
    pure assume true;
  }
  or
  {
    /* if_else */
    pure assume
      !(((oc_5 != y_9
         /* File "tests/spl/nested_sl/traverse.spl", line 8, columns 9-16 */)));
    /* join */
    pure assume y_11 == y_9 && x_11 == x_9 && oc_8 == oc_5 && ic_7 == ic_4 &&
      FP_11 == FP;
  }
  /* assign */
  pure assume FP_Caller_final_2 == FP_Caller_2 ++ FP_11;
}

procedure traverse_loop_1(ghost first_iter: Bool, y_7: Loc, x_7: Loc, 
                          oc_2: Loc, ic_2: Loc, ghost FP_Caller: Set<
                          Loc>, implicit ghost FP: Set<Loc>)
  returns (y: Loc, x: Loc, oc: Loc, ic: Loc, ghost FP_Caller_final: Set<Loc>)
  /* invariant */
  pure requires
    (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
            ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
       FP <= FP_Caller &&
       (lseg(InnerNode, inext, oc_2.down, null, ?X_36)
       /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
         (?X_37 <= ?X_36
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
         ({} == ?X_38 ** ?X_35
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         (?X_39 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 && ?X_37 == {ic_2} &&
         ?X_38 == {oc_2} ||
         (lseg(InnerNode, inext, oc_2.down, null, ?X_37)
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
           ({} <= ?X_37
           /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
           (ic_2 == null
           /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
           ({} == ?X_38 ** ?X_36
           /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
           (?X_35 == FP
           /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
           ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 && ?X_38 == {oc_2})
  /* initial footprint of traverse_loop_1 */
  free pure requires FP_Caller <= Alloc && (null !in Alloc)
  /* invariant */
  pure requires first_iter || (FP_Caller -- FP == {})
  /* type_of_y */
  free pure requires y_7 in OuterNode
  /* type_of_x */
  free pure requires x_7 in OuterNode
  /* type_of_oc */
  free pure requires oc_2 in OuterNode
  /* type_of_ic */
  free pure requires ic_2 in InnerNode
  /* invariant */
  free pure ensures
    (exists ?X_44: Set<Loc>, ?X_45: Set<Loc>, ?X_46: Set<Loc>,
            ?X_47: Set<Loc>, ?X_48: Set<Loc>, ?X_49: Set<Loc>,
            ?X_50: Set<Loc> ::
       ?X_44 == {oc} && ?X_45 == {ic} && ?X_47 == ?X_46 &&
         ?X_50 == ?X_44 ++ ?X_47 &&
         (?X_50 == Alloc ** FP ++ (Alloc -- old(Alloc))
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         ({} == ?X_44 ** ?X_47
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         (?X_45 <= ?X_46
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
         (lseg(InnerNode, inext, oc.down, null, ?X_46)
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) ||
       ?X_44 == {oc} && ?X_48 == ?X_46 && ?X_49 == ?X_44 ++ ?X_48 &&
         (?X_49 == Alloc ** FP ++ (Alloc -- old(Alloc))
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         ({} == ?X_44 ** ?X_48
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         (ic == null
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
         ({} <= ?X_46
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
         (lseg(InnerNode, inext, oc.down, null, ?X_46)
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */))
  /* framecondition of traverse_loop_1 */
  free pure ensures
    FP_Caller_final == (FP_Caller -- FP) ++ Alloc ** FP ++ (Alloc -- 
                                                            old(Alloc))
  /* framecondition of traverse_loop_1 */
  free pure ensures Alloc == (old(Alloc) -- FP_Caller) ++ FP_Caller_final &&
    (null !in Alloc)
  /* framecondition of traverse_loop_1 */
  free pure ensures Frame(FP, old(Alloc), old(onext), onext)
  /* framecondition of traverse_loop_1 */
  free pure ensures Frame(FP, old(Alloc), old(inext), inext)
  /* framecondition of traverse_loop_1 */
  free pure ensures Frame(FP, old(Alloc), old(head), head)
  /* framecondition of traverse_loop_1 */
  free pure ensures Frame(FP, old(Alloc), old(down), down)
  /* loop exit condition of traverse_loop_1 */
  free pure ensures
    (ic == null
    /* File "tests/spl/nested_sl/traverse.spl", line 12, columns 11-21 */)
  /* type_of_y */
  free pure ensures y in OuterNode
  /* type_of_x */
  free pure ensures x in OuterNode
  /* type_of_oc */
  free pure ensures oc in OuterNode
  /* type_of_ic */
  free pure ensures ic in InnerNode
  /* framecondition of traverse_loop_1 */
  free pure ensures oc == oc_2
  /* framecondition of traverse_loop_1 */
  free pure ensures x == x_7
  /* framecondition of traverse_loop_1 */
  free pure ensures y == y_7
{
  var y_13: Loc;
  var y_12: Loc;
  var x_13: Loc;
  var x_12: Loc;
  var oc_10: Loc;
  var oc_9: Loc;
  var ic_10: Loc;
  var ic_9: Loc;
  var ic_8: Loc;
  var ghost FP_Caller_final_3: Set<Loc>;
  var ghost FP_Caller_3: Set<Loc>;
  var ghost FP_13: Set<Loc>;
  var ghost FP_12: Set<Loc>;
  /* invariant */
  pure assume
    (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
            ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
       FP <= FP_Caller &&
       (lseg(InnerNode, inext, oc_2.down, null, ?X_36)
       /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
         (?X_37 <= ?X_36
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
         ({} == ?X_38 ** ?X_35
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         (?X_39 == FP
         /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
         ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 && ?X_37 == {ic_2} &&
         ?X_38 == {oc_2} ||
         (lseg(InnerNode, inext, oc_2.down, null, ?X_37)
         /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
           ({} <= ?X_37
           /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
           (ic_2 == null
           /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
           ({} == ?X_38 ** ?X_36
           /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
           (?X_35 == FP
           /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
           ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 && ?X_38 == {oc_2});
  /* initial footprint of traverse_loop_1 */
  pure assume FP_Caller <= Alloc && (null !in Alloc);
  /* invariant */
  pure assume first_iter || FP_Caller -- FP == {};
  /* type_of_y */
  pure assume y_7 in OuterNode;
  /* type_of_x */
  pure assume x_7 in OuterNode;
  /* type_of_oc */
  pure assume oc_2 in OuterNode;
  /* type_of_ic */
  pure assume ic_2 in InnerNode;
  /* assign */
  pure assume FP_Caller_3 == FP_Caller -- FP;
  /* assign */
  pure assume y_12 == y_7 && x_12 == x_7 && oc_9 == oc_2 && ic_8 == ic_2;
  choose
  {
    {
      /* if_then */
      pure assume
        ((ic_8 != null
         /* File "tests/spl/nested_sl/traverse.spl", line 12, columns 11-21 */));
      /* check heap access */
      pure assert ic_8 in FP;
      /* assign */
      pure assume ic_9 == ic_8.inext;
      /* type_of_ic */
      pure assume ic_9 in InnerNode;
      {
        /* invariant */
        pure assert
          (exists FP_12: Set<Loc> :: (false || (FP -- FP_12 == {})) &&
             (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
                     ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
                FP_12 <= FP &&
                (lseg(InnerNode, inext, oc_9.down, null, ?X_36)
                /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                  (?X_37 <= ?X_36
                  /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                  ({} == ?X_38 ** ?X_35
                  /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                  (?X_39 == FP_12
                  /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                  ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 &&
                  ?X_37 == {ic_9} && ?X_38 == {oc_9} ||
                  (lseg(InnerNode, inext, oc_9.down, null, ?X_37)
                  /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                    ({} <= ?X_37
                    /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                    (ic_9 == null
                    /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
                    ({} == ?X_38 ** ?X_36
                    /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                    (?X_35 == FP_12
                    /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                    ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 &&
                    ?X_38 == {oc_9}));
        /* invariant */
        pure assume
          (exists ?X_39: Set<Loc>, ?X_35: Set<Loc>, ?X_36: Set<Loc>,
                  ?X_37: Set<Loc>, ?X_38: Set<Loc> ::
             FP_12 <= FP &&
             (lseg(InnerNode, inext, oc_9.down, null, ?X_36)
             /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
               (?X_37 <= ?X_36
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               ({} == ?X_38 ** ?X_35
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (?X_39 == FP_12
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ?X_39 == ?X_38 ++ ?X_35 && ?X_35 == ?X_36 &&
               ?X_37 == {ic_9} && ?X_38 == {oc_9} ||
               (lseg(InnerNode, inext, oc_9.down, null, ?X_37)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) &&
                 ({} <= ?X_37
                 /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
                 (ic_9 == null
                 /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
                 ({} == ?X_38 ** ?X_36
                 /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                 (?X_35 == FP_12
                 /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
                 ?X_35 == ?X_38 ++ ?X_36 && ?X_36 == ?X_37 && ?X_38 == {oc_9});
        /* invariant */
        pure assume false || FP -- FP_12 == {};
        /* havoc */
        pure assume y_13 == y_13 && x_13 == x_13 && oc_10 == oc_10 &&
          ic_10 == ic_10 && FP_13 == FP_13;
        /* invariant */
        pure assume
          (exists ?X_44: Set<Loc>, ?X_45: Set<Loc>, ?X_46: Set<Loc>,
                  ?X_47: Set<Loc>, ?X_48: Set<Loc>, ?X_49: Set<Loc>,
                  ?X_50: Set<Loc> ::
             ?X_44 == {oc_10} && ?X_45 == {ic_10} && ?X_47 == ?X_46 &&
               ?X_50 == ?X_44 ++ ?X_47 &&
               (?X_50 == Alloc ** FP_12 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ({} == ?X_44 ** ?X_47
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (?X_45 <= ?X_46
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               (lseg(InnerNode, inext, oc_10.down, null, ?X_46)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */) ||
             ?X_44 == {oc_10} && ?X_48 == ?X_46 && ?X_49 == ?X_44 ++ ?X_48 &&
               (?X_49 == Alloc ** FP_12 ++ (Alloc -- Alloc)
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               ({} == ?X_44 ** ?X_48
               /* File "tests/spl/nested_sl/traverse.spl", line 13, column 16 to line 14, column 63 */) &&
               (ic_10 == null
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 17-27 */) &&
               ({} <= ?X_46
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 16-63 */) &&
               (lseg(InnerNode, inext, oc_10.down, null, ?X_46)
               /* File "tests/spl/nested_sl/traverse.spl", line 14, columns 44-63 */));
        /* framecondition of traverse_loop_1 */
        pure assume
          FP_13 == (FP -- FP_12) ++ Alloc ** FP_12 ++ (Alloc -- Alloc);
        /* framecondition of traverse_loop_1 */
        pure assume Alloc == (Alloc -- FP) ++ FP_13 && (null !in Alloc);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_12, Alloc, onext, onext);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_12, Alloc, inext, inext);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_12, Alloc, head, head);
        /* framecondition of traverse_loop_1 */
        pure assume Frame(FP_12, Alloc, down, down);
        /* loop exit condition of traverse_loop_1 */
        pure assume
          (ic_10 == null
          /* File "tests/spl/nested_sl/traverse.spl", line 12, columns 11-21 */);
        /* type_of_y */
        pure assume y_13 in OuterNode;
        /* type_of_x */
        pure assume x_13 in OuterNode;
        /* type_of_oc */
        pure assume oc_10 in OuterNode;
        /* type_of_ic */
        pure assume ic_10 in InnerNode;
        /* framecondition of traverse_loop_1 */
        pure assume oc_10 == oc_9;
        /* framecondition of traverse_loop_1 */
        pure assume x_13 == x_12;
        /* framecondition of traverse_loop_1 */
        pure assume y_13 == y_12;
      }
    }
    /* join */
    pure assume true;
  }
  or
  {
    /* if_else */
    pure assume
      !(((ic_8 != null
         /* File "tests/spl/nested_sl/traverse.spl", line 12, columns 11-21 */)));
    /* join */
    pure assume y_13 == y_12 && x_13 == x_12 && oc_10 == oc_9 &&
      ic_10 == ic_8 && FP_13 == FP;
  }
  /* assign */
  pure assume FP_Caller_final_3 == FP_Caller_3 ++ FP_13;
}

